{
  "summary": {
    "total_tests": 33,
    "passed_tests": 31,
    "success_rate": 93.93939393939394,
    "categories": {
      "Authentication": true,
      "Template Management": true,
      "Configuration Management": true,
      "Notification Sending": true,
      "Template Processing": true,
      "Statistics": false,
      "Edge Cases": true
    }
  },
  "detailed_results": [
    {
      "test": "Backend Health Check",
      "passed": true,
      "details": "Backend is running. Status: healthy",
      "response_data": {
        "service": "fantasy-esports-backend",
        "status": "healthy",
        "version": "1.0.0"
      },
      "timestamp": "2025-08-04 14:38:53"
    },
    {
      "test": "Admin Login Authentication",
      "passed": true,
      "details": "Admin login successful. Token obtained.",
      "response_data": {
        "status_code": 200,
        "has_token": true
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "User Authentication Setup",
      "passed": true,
      "details": "Mobile verification endpoint working. User auth flow available.",
      "response_data": {
        "status_code": 200,
        "mobile_verification": true
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - User Send Notification",
      "passed": true,
      "details": "Correctly returns 401 for missing user authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "user"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - Admin Send Notification",
      "passed": true,
      "details": "Correctly returns 401 for missing admin authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "admin"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - Admin Bulk Notification",
      "passed": true,
      "details": "Correctly returns 401 for missing admin authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "admin"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - Create Template",
      "passed": true,
      "details": "Correctly returns 401 for missing admin authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "admin"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - Get Templates",
      "passed": true,
      "details": "Correctly returns 401 for missing admin authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "admin"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - Get Config",
      "passed": true,
      "details": "Correctly returns 401 for missing admin authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "admin"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Auth Required - Get Stats",
      "passed": true,
      "details": "Correctly returns 401 for missing admin authentication",
      "response_data": {
        "status_code": 401,
        "auth_type": "admin"
      },
      "timestamp": "2025-08-04 14:38:54"
    },
    {
      "test": "Create SMS Template",
      "passed": true,
      "details": "SMS template created successfully with ID 101",
      "response_data": {
        "template_id": 101,
        "name": "Test SMS Template"
      },
      "timestamp": "2025-08-04 14:38:55"
    },
    {
      "test": "Create Email Template",
      "passed": true,
      "details": "Email template created successfully with ID 102",
      "response_data": {
        "template_id": 102,
        "name": "Test Email Template"
      },
      "timestamp": "2025-08-04 14:38:55"
    },
    {
      "test": "Get Templates with Pagination",
      "passed": true,
      "details": "Retrieved 10 templates. Total: 102",
      "response_data": {
        "template_count": 10,
        "pagination": {
          "limit": 10,
          "page": 1,
          "total": 102,
          "total_pages": 11
        }
      },
      "timestamp": "2025-08-04 14:38:56"
    },
    {
      "test": "Get Templates with Filtering",
      "passed": true,
      "details": "Retrieved 10 SMS templates with Fast2SMS provider",
      "response_data": {
        "filtered_count": 10
      },
      "timestamp": "2025-08-04 14:38:57"
    },
    {
      "test": "Get Specific Template",
      "passed": true,
      "details": "Retrieved template 101 successfully",
      "response_data": {
        "template_id": 101,
        "name": "Test SMS Template"
      },
      "timestamp": "2025-08-04 14:38:57"
    },
    {
      "test": "Update Template",
      "passed": true,
      "details": "Template 101 updated successfully",
      "response_data": {
        "template_id": 101,
        "success": true
      },
      "timestamp": "2025-08-04 14:38:58"
    },
    {
      "test": "Update Fast2SMS Configuration",
      "passed": true,
      "details": "Fast2SMS API key configuration updated successfully",
      "response_data": {
        "provider": "fast2sms",
        "config_key": "api_key"
      },
      "timestamp": "2025-08-04 14:38:58"
    },
    {
      "test": "Update SMTP Configuration",
      "passed": true,
      "details": "SMTP username configuration updated successfully",
      "response_data": {
        "provider": "smtp",
        "config_key": "username"
      },
      "timestamp": "2025-08-04 14:38:59"
    },
    {
      "test": "Get Fast2SMS Configuration",
      "passed": true,
      "details": "Retrieved Fast2SMS configuration with 3 settings",
      "response_data": {
        "config_count": 3,
        "has_api_key": true
      },
      "timestamp": "2025-08-04 14:38:59"
    },
    {
      "test": "Get SMTP Configuration",
      "passed": true,
      "details": "Retrieved SMTP configuration with 6 settings",
      "response_data": {
        "config_count": 6,
        "has_username": true
      },
      "timestamp": "2025-08-04 14:39:00"
    },
    {
      "test": "Admin Send SMS (Configuration Error Expected)",
      "passed": true,
      "details": "Correctly returned configuration error: NETWORK_ERROR: Failed to parse response (caused by: json: cannot unmarshal string into Go struct field Fast2SMSResponse.message of type []string)",
      "response_data": {
        "status_code": 500,
        "error_type": "configuration"
      },
      "timestamp": "2025-08-04 14:39:01"
    },
    {
      "test": "Admin Send Email (Configuration Error Expected)",
      "passed": true,
      "details": "Correctly returned configuration error: INVALID_CONFIG: Missing required config: password",
      "response_data": {
        "status_code": 500,
        "error_type": "configuration"
      },
      "timestamp": "2025-08-04 14:39:03"
    },
    {
      "test": "Admin Send Push (Configuration Error Expected)",
      "passed": true,
      "details": "Correctly returned configuration error: INVALID_CONFIG: Missing required config: server_key",
      "response_data": {
        "status_code": 500,
        "error_type": "configuration"
      },
      "timestamp": "2025-08-04 14:39:04"
    },
    {
      "test": "Admin Send WhatsApp (Configuration Error Expected)",
      "passed": true,
      "details": "Correctly returned configuration error: INVALID_CONFIG: Missing required config: access_token",
      "response_data": {
        "status_code": 500,
        "error_type": "configuration"
      },
      "timestamp": "2025-08-04 14:39:06"
    },
    {
      "test": "Admin Bulk Notification (Configuration Error Expected)",
      "passed": true,
      "details": "Bulk notification handled correctly (configuration errors expected)",
      "response_data": {
        "status_code": 200,
        "has_responses": true
      },
      "timestamp": "2025-08-04 14:39:09"
    },
    {
      "test": "Template Variable Processing",
      "passed": true,
      "details": "Template processing completed with response: NETWORK_ERROR: Failed to parse response (caused by: json: cannot unmarshal string into Go struct field Fast2SMSResponse.message of type []string)",
      "response_data": {
        "success": false,
        "error": "NETWORK_ERROR: Failed to parse response (caused by: json: cannot unmarshal string into Go struct field Fast2SMSResponse.message of type []string)",
        "code": "SEND_FAILED"
      },
      "timestamp": "2025-08-04 14:39:11"
    },
    {
      "test": "Get Notification Statistics",
      "passed": false,
      "details": "Get notification stats failed with status 500",
      "response_data": {
        "status_code": 500
      },
      "timestamp": "2025-08-04 14:39:11"
    },
    {
      "test": "Get Channel Statistics",
      "passed": true,
      "details": "Retrieved channel stats for 30 days. 4 channel/provider combinations",
      "response_data": {
        "channel_count": 4
      },
      "timestamp": "2025-08-04 14:39:11"
    },
    {
      "test": "Get Filtered Notification Statistics",
      "passed": false,
      "details": "Get filtered stats failed with status 500",
      "response_data": {
        "status_code": 500
      },
      "timestamp": "2025-08-04 14:39:11"
    },
    {
      "test": "Invalid Template ID (404 Expected)",
      "passed": true,
      "details": "Correctly returns 404 for non-existent template",
      "response_data": {
        "status_code": 404
      },
      "timestamp": "2025-08-04 14:39:12"
    },
    {
      "test": "Malformed Request (400 Expected)",
      "passed": true,
      "details": "Correctly returns 400 for malformed template creation request",
      "response_data": {
        "status_code": 400
      },
      "timestamp": "2025-08-04 14:39:12"
    },
    {
      "test": "Invalid Channel/Provider Combination",
      "passed": true,
      "details": "Correctly handles invalid provider/channel combination: UNSUPPORTED_PROVIDER: Unsupported provider/channel combination",
      "response_data": {
        "error_type": "invalid_combination"
      },
      "timestamp": "2025-08-04 14:39:12"
    },
    {
      "test": "Missing Config Parameters (400 Expected)",
      "passed": true,
      "details": "Correctly returns 400 for missing provider/channel parameters",
      "response_data": {
        "status_code": 400
      },
      "timestamp": "2025-08-04 14:39:12"
    }
  ]
}